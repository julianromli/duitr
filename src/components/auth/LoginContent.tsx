// Component: LoginContent
// Description: Renders the UI for the login form (inputs, buttons, links).
// To be used within the Login page component which handles state and logic.
// Initially generated by AI based on user prompt and refactored.

import React from 'react';
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useId } from "react";
import { FaGoogle } from 'react-icons/fa'; // Keep consistency with original Login page

// Define props expected from the parent Login page
interface LoginContentProps {
  email: string;
  setEmail: (value: string) => void;
  password: string;
  setPassword: (value: string) => void;
  isSubmitting: boolean;
  handleEmailSignIn: (e: React.FormEvent) => Promise<void>;
  handleGoogleSignIn: () => Promise<void>;
  // Add any other props needed, e.g., rememberMe state/handler if implemented
}

function LoginContent({
  email,
  setEmail,
  password,
  setPassword,
  isSubmitting,
  handleEmailSignIn,
  handleGoogleSignIn,
}: LoginContentProps) {
  const id = useId();

  return (
    <>
      {/* Google Sign In Button - Kept separate as in original design */}
      {/* Styling matches original Login page, consider unifying later */}
       <Button
          variant="outline"
          className="w-full py-6 border border-border bg-background text-foreground flex items-center justify-center gap-3 rounded-full hover:bg-accent" // Use theme colors
          onClick={handleGoogleSignIn}
          disabled={isSubmitting}
        >
          <div className="w-6 h-6 bg-white rounded-full flex items-center justify-center"> {/* Keep Google's branding style */}
            <FaGoogle className="h-4 w-4 text-black" />
          </div>
          <span className="font-medium">Continue with Google</span>
      </Button>

      {/* Divider */}
      <div className="relative my-8"> {/* Added margin */ }
        <div className="absolute inset-0 flex items-center">
          <div className="w-full border-t border-border"></div> {/* Use theme border */}
        </div>
        <div className="relative flex justify-center">
           {/* Use theme colors */}
          <span className="px-4 bg-background text-muted-foreground">or</span>
        </div>
      </div>

      {/* Email Login Form */}
      <form onSubmit={handleEmailSignIn} className="space-y-6">
        <div className="space-y-4">
          <div className="space-y-2">
             {/* Use theme text color */ }
            <Label htmlFor={`${id}-email`} className="text-foreground">Email</Label>
            <Input
              id={`${id}-email`}
              placeholder="hi@yourcompany.com"
              type="email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              // Removed specific dark theme classes, rely on ui/input styles
              // className="bg-[#292929] border-none text-white py-6 px-4 rounded-md placeholder:text-[#868686]"
              className="h-auto py-3" // Adjust padding/height if needed
            />
          </div>
          <div className="space-y-2">
             {/* Use theme text color */ }
            <Label htmlFor={`${id}-password`} className="text-foreground">Password</Label>
            <Input
              id={`${id}-password`}
              placeholder="Enter your password"
              type="password"
              required
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              // Removed specific dark theme classes
              // className="bg-[#292929] border-none text-white py-6 px-4 rounded-md placeholder:text-[#868686]"
               className="h-auto py-3" // Adjust padding/height if needed
            />
          </div>
        </div>
        <div className="flex items-center justify-between gap-2">
          <div className="flex items-center gap-2">
            {/* Use theme colors for checkbox */}
            <Checkbox id={`${id}-remember`} />
            <Label htmlFor={`${id}-remember`} className="text-sm font-normal text-muted-foreground">
              Remember me
            </Label>
          </div>
           {/* Use theme primary color for link */}
          <a href="/forgotpassword" className="text-sm text-primary underline hover:no-underline">
            Forgot password?
          </a>
        </div>
         {/* Use theme colors/styles for button */}
        <Button
          type="submit"
          className="w-full" // Removed custom dark style, rely on ui/button
          // className="w-full bg-[#C6FE1E] hover:bg-[#B0E018] text-[#0D0D0D] font-bold py-6 rounded-full"
          disabled={isSubmitting}
        >
          {isSubmitting ? 'Signing In...' : 'Sign in'}
        </Button>

        {/* Link to Sign Up */}
         <p className="text-center text-sm text-muted-foreground">
            Don't have an account?{' '}
            <a href="/signup" className="text-primary underline hover:no-underline">
              Sign up
            </a>
         </p>
      </form>
    </>
  );
}

export { LoginContent }; 